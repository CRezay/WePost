user www-data;
worker_processes 1;
error_log  /var/log/nginx/error.log warn;
pid /run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  ##
  # Basic Settings
  ##
  sendfile on;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  tcp_nodelay on;
  tcp_nopush on;
  keepalive_timeout 30s;
  types_hash_max_size 2048;
  include /etc/nginx/mime.types;

  ##
  # Logging Settings
  ##
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  ##
  # Gzip Settings
  ##
  gzip on;
  gzip_disable "msie6";
  gzip_min_length 4096;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 2;
  # gzip_buffers 16 8k;
  # gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    # server unix:/tmp/gunicorn.sock fail_timeout=0;

    # for a TCP configuration
    server 127.0.0.1:8000 fail_timeout=0;
  }

  server {
    # if no Host match, close the connection to prevent host spoofing
    listen 80 default_server;
    return 444;
  }

  server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    listen 80;
    client_max_body_size 4G;

    # set the correct host(s) for your site
    server_name .bviews.top;

    keepalive_timeout 5;

    ##
    # static and media files
    ##

    location ^~/static/ {
      root /var/www/statics/wepost/;
      add_header Cache-Control public;
      expires 1s;
      access_log      off;
    }

    location ^~/media/ {
      root /var/www/medias/wepost/;
      expires 1h;
      access_log  off;
    }

    location  / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Real-Ip $remote_addr;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /var/www/statics/wepost/static;
    }
  }
}
